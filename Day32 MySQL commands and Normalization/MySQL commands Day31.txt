#ADDRESS BOOK DB

#UC1:Creating a data base:
CREATE DATABASE payroll_service; # to create new data base
SHOW DATABASES;			 # to see all the available data bases
USE address_book_service_db;	 # for using perticular data base
SELECT database(); 		 # to check which data base was selected or working with

//**********************************************************

#UC2:Creating address book table with attributes
CREATE TABLE address_book
(
 first_name VARCHAR(100) NOT NULL,
 last_name VARCHAR(100) NOT NULL,
 address VARCHAR(100) NOT NULL,
 city VARCHAR(100) NOT NULL,
 state VARCHAR(100) NOT NULL,
 zip INT UNSIGNED NOT NULL,
 phonenumber BIGINT NOT NULL,
 email VARCHAR(300) NOT NULL
); 

//**********************************************************

#UC3: INSERTING NEW CONTACTS INTO THE TABLE
USE address_book_service_db;
INSERT INTO address_book (first_name,last_name,address,city,state,zip,phonenumber,email) 
VALUES ('Hruday','Vemuri','House no.2-5-7/b, kotipally.','Vijayavada','Andhra Pradesh',526389,9999999999,'hruday.vemuri@gmail.com');
SELECT * FROM address_book;

//**********************************************************

#UC4: EDITING EXISTING CONTACTS USING NAME
USE address_book_service_db;
UPDATE address_book set phonenumber = 2222222222
WHERE first_name = 'Hruday' AND last_name = 'Vemuri';
SELECT * FROM address_book;

//**********************************************************

#UC5: DELETING CONTACT USING NAME
USE address_book_service_db;
DELETE FROM address_book
WHERE first_name = 'Hruday' AND last_name = 'Vemuri';
SELECT * FROM address_book;

//**********************************************************

#UC6: RETRIEVING CONTACT BY CITY OR STATE
USE address_book_service_db;
SELECT * FROM address_book
WHERE state = 'Telangana' OR city = 'Hyderabad';

//**********************************************************

#UC7: FINDING SIZE OF BOOK BY CITY OR STATE

#COUNT BY CITY:
USE address_book_service_db;
SELECT city,COUNT(*) FROM address_book
GROUP BY city;

##################

#COUNT BY STATE:
USE address_book_service_db;
SELECT state,COUNT(*) FROM address_book
GROUP BY state;

//**********************************************************

#UC8: GETTING DETAILS BY PERSON NAME FOR THE GIVEN CITY IN ALPHABETICAL ORDER
USE address_book_service_db;
SELECT * FROM address_book
WHERE city = 'Hyderabad'
ORDER BY first_name ASC;

//**********************************************************

#UC9: ADDING NAME AND TYPE TO THE TABLE
USE address_book_service_db;

ALTER TABLE address_book
ADD type VARCHAR(150) AFTER last_name;

UPDATE address_book SET type = 'family'
WHERE first_name = 'Vijay Sai Krishna' OR first_name = 'Pranay';

UPDATE address_book SET type = 'friends'
WHERE first_name = 'Shiva' OR last_name = 'Kurri';

UPDATE address_book SET type = 'manager'
WHERE first_name = 'Hruday' OR last_name = 'Vemuri';

SELECT * from address_book
WHERE type = 'family';

//**********************************************************

#UC10: GETTING COUNT BY TYPE
USE address_book_service_db;
SELECT type,COUNT(*) from address_book
GROUP BY type;

//**********************************************************

#UC11: ADDING SAME PERSON TO BOTH TYPES (FAMILY AND FRIENDS)
UPDATE address_book SET type = 'friends'
WHERE first_name = 'Shiva' OR last_name = 'Kurri';

UPDATE address_book SET type = 'manager'
WHERE first_name = 'Hruday' OR last_name = 'Vemuri';

//**********************************************************

#UC12: RE-CREATING TABLES TO DRAW ER-DIAGRAM

# TO DRAW ER DIAGRAM:

USE address_book_service_db;

#creating new table with id and name and type
create table name_type 
(
	id int not null auto_increment,
	name varchar(150) not null,
	type varchar(100) not null,
	primary key(id)
);

#describing table attributes
desc name_type;

#copying data from address_book table to name_type table
insert into name_type (name,type)
select name,type from address_book;

#printing everything in name_type table
select * from name_type;

#type is repeating, need to refactor!

#creating new table
create table id_name 
(
	id int not null auto_increment,
    name varchar(300) not null,
    primary key(id)
);

#checking if table created or not
show tables;
desc id_name;

# copying data from name_type to id_name
insert into id_name (name)
select name from address_book;
select * from id_name;

#creating new table
create table id_type 
(
	id int not null auto_increment,
    type varchar(100) not null,
    primary key(id)
);

#checking if table created or not
show tables;
desc id_type;

# copying data from name_type to id_name
insert into id_type (type)
select type from address_book;
select * from id_type;

#type repeated in id_type table again, so need to refactor!

#changing name of column id
ALTER TABLE id_type CHANGE id type_id int not null auto_increment;
select * from id_type;

#changing column type (refactoring)
update id_type set type = 'family'
where type_id = 2;
delete from id_type
where type_id = 3 or type_id = 4 or type_id = 5;
select * from id_type;

##################

#creating new table
create table id_city
(
	city_id int not null auto_increment,
    city varchar(150) not null,
    primary key(city_id)
);

#checking if table created or not
show tables;
desc id_city;

# copying data from name_type to id_name
insert into id_city (city)
select city from address_book;
select * from id_city;

#city repeated multiple times, need to refactor!

#changing column city (refactoring)
delete from id_city
where city_id = 2 or city_id = 3;
update id_city set city_id = 2
where city = 'Nellur';
update id_city set city_id = 3
where city = 'Vijayavada';
select * from id_city;

#################################

#creating new table
create table id_state
(
	state_id int not null auto_increment,
    state varchar(150) not null,
    primary key(state_id)
);

#checking if table created or not
show tables;
desc id_state;

# copying data from name_type to id_name
insert into id_state (state)
select state from address_book;
select * from id_state;

#state repeating, need refactoring!

#changing column state (refactoring)
delete from id_state
where state_id = 2 or state_id = 3 or state_id = 5;
update id_state set state_id = 2
where state = 'Andhra Pradesh';
select * from id_state;

#################################

#creating new table
create table city_zip
(
	id int not null auto_increment,
    city varchar(150) not null,
    zip int not null,
    primary key(id)
);

#checking if table created or not
show tables;
desc city_zip;

# copying data from name_type to id_name
insert into city_zip (city,zip)
select city,zip from address_book;
select * from city_zip;

# city and zip values repeating, need refactoring!

#changing column state (refactoring)
delete from city_zip
where id = 2 or id = 3;
update city_zip set id = 2
where city = 'Nellur';
update city_zip set id = 3
where city = 'Vijayavada';
select * from city_zip;

#################################

#creating new table
create table id_details
(
	id int not null auto_increment,
    first_name varchar(150) not null,
    last_name varchar(150) not null,
    email varchar(300) not null,
    primary key(id)
);

#checking if table created or not
show tables;
desc id_details;

# copying data from name_type to id_name
insert into id_details (first_name,last_name,email)
select first_name,last_name,email from address_book;
select * from id_details;

#################################

#creating new table
create table id_phonenumber
(
	id int not null auto_increment,
    phonenumber bigint not null,
    primary key(id)
);

#checking if table created or not
show tables;
desc id_phonenumber;

# copying data from address_book to id_phonenumber
insert into id_phonenumber (phonenumber)
select phonenumber from address_book;
select * from id_phonenumber;

//**********************************************************

UC13: ON GOING ...


//**********************************************************

#SOME USEFUL OPERATIONS:


#################################
use address_book_db;
update address_book1 set name = concat(first_name ,' ', last_name);
select * from address_book1;
#################################
use address_book_db;
update address_book1 set type = 'friend'
where name = 'Navin M';
select * from address_book1; 
#################################
use address_book_db;
select type,count(type) from address_book1
group by type;
select * from address_book1;
#################################
use address_book_db;
insert into address_book1 (name,type,first_name,last_name,address,city,state,zip,phone_number,email)
select name,type,first_name,last_name,address,city,state,zip,phone_number,email from address_book1
where name = 'Mrunal N';
select * from address_book1;
#################################
insert into address_book1 (name,type,first_name,last_name,address,city,state,zip,phone_number,email)
select name,'family',first_name,last_name,address,city,state,zip,phone_number,email from address_book1
where name = 'Navin M';
#################################
//*********************************************